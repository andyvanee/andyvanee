<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>andyvanee</title>
  <subtitle>Computer programming, philosophy and life</subtitle>
  <id>http://andyvanee.com</id>
  <link href="http://andyvanee.com"/>
  <link href="http://andyvanee.com/feed.xml" rel="self"/>
  <updated>2017-04-21T15:30:00-06:00</updated>
  <author>
    <name>Andy VanEe</name>
  </author>
  <entry>
    <title>Deconstruct 2017 - Stronger Communities</title>
    <link rel="alternate" href="http://andyvanee.com/2017/04/21/deconstruct-2017-stronger-communities.html"/>
    <id>http://andyvanee.com/2017/04/21/deconstruct-2017-stronger-communities.html</id>
    <published>2017-04-21T15:30:00-06:00</published>
    <updated>2017-11-07T21:30:04-07:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;p&gt;&lt;img src="/images/deconstruct-badge-2017.jpg" title="Deconstruct 2017 Badge" alt="Deconstruct 2017 Badge"&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://deconstructconf.com/"&gt;Deconstruct 2017&lt;/a&gt; is over, and I’m still
processing a lot of what I heard, but I did want to get a few notes down while
the ideas are fresh.&lt;/p&gt;

&lt;p&gt;It came up a few times that the software community needs...&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;&lt;img src="/images/deconstruct-badge-2017.jpg" title="Deconstruct 2017 Badge" alt="Deconstruct 2017 Badge" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://deconstructconf.com/"&gt;Deconstruct 2017&lt;/a&gt; is over, and I&amp;rsquo;m still
processing a lot of what I heard, but I did want to get a few notes down while
the ideas are fresh.&lt;/p&gt;

&lt;p&gt;It came up a few times that the software community needs to do better in terms
of inclusivity and overcoming the biases that have accumulated. When I hear this
I have a very different reaction than I did a few years ago.&lt;/p&gt;

&lt;p&gt;My first reaction is to feel the instinctive tension build among the 20-30 year
old single white males&amp;hellip; which is a large percentage of the audience.&lt;/p&gt;

&lt;p&gt;&amp;ldquo;I haven&amp;rsquo;t done anything wrong. Stop looking at me like I did something wrong!
Why are you accusing me, I&amp;rsquo;m innocent!!!&amp;rdquo;&lt;/p&gt;

&lt;p&gt;I get it. I understand this reaction. It was my reaction at one point.&lt;/p&gt;

&lt;p&gt;Now that I have two growing girls, I have an equal and opposite reaction.&lt;/p&gt;

&lt;p&gt;I must advocate.&lt;/p&gt;

&lt;p&gt;I don&amp;rsquo;t know how to do this well.&lt;/p&gt;

&lt;p&gt;I spent my 20&amp;rsquo;s and 30&amp;rsquo;s being somewhat defensive and reactionary about the
issue. But now I see how my young girls feed on the stereotypes and identity
bias in our society. Kids are especially vulnerable to having their worldview
shaped by others. When they are being fed garbage by adults or peers, it&amp;rsquo;s
my job as a father to advocate for them and call it out.&lt;/p&gt;

&lt;p&gt;From that point it&amp;rsquo;s not terribly hard to expand that understanding to other
groups that are shaped by similar stereotypes.&lt;/p&gt;

&lt;p&gt;It was somewhere in between Jenn Schiffer and David Nolen that a little light
bulb went off - I had always thought about it in terms of power.&lt;/p&gt;

&lt;p&gt;When I advocate for my kids, it&amp;rsquo;s not about power. I&amp;rsquo;m not trading some of my
social status to give to them. If I don&amp;rsquo;t advocate for them, they lose and I
lose.&lt;/p&gt;

&lt;p&gt;It really is the same for any social community, but it may be harder to see when
there are economic realities in play. We all lose when we don&amp;rsquo;t advocate for
those who can&amp;rsquo;t or won&amp;rsquo;t advocate for themselves.&lt;/p&gt;

&lt;p&gt;There was a lot of technical stuff at Deconstruct that I&amp;rsquo;m really excited about,
and may talk about soon, but this is the issue that I feel most strongly about.&lt;/p&gt;

&lt;p&gt;How do we build stronger communities?&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Converting Atmospheric CO₂</title>
    <link rel="alternate" href="http://andyvanee.com/2016/05/19/converting-co2.html"/>
    <id>http://andyvanee.com/2016/05/19/converting-co2.html</id>
    <published>2016-05-18T18:00:00-06:00</published>
    <updated>2017-11-07T21:30:04-07:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;p&gt;I had an idea as I was driving today. It seems so obvious that I’m sure it has
some fundamental flaw. Either that, or someone is already working on it. I’m
writing this only in the hopes that a Chemist...&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;I had an idea as I was driving today. It seems so obvious that I&amp;rsquo;m sure it has
some fundamental flaw. Either that, or someone is already working on it. I&amp;rsquo;m
writing this only in the hopes that a Chemist or Biologist can explain to me how
I&amp;rsquo;m wrong and why I&amp;rsquo;m wrong.&lt;/p&gt;

&lt;p&gt;We have a problem with CO₂ in the atmosphere. Politicians and environmental
groups are hard at work bringing in regulation regarding the amounts of CO₂ we
are putting into the atmosphere. But is anyone working on &lt;strong&gt;removing&lt;/strong&gt; CO₂ from
the atmosphere?&lt;/p&gt;

&lt;p&gt;My idea is this - build machines which will convert atmospheric CO₂ back into
Carbon and Oxygen.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s not as if CO₂ is some exotic molecule or radioactive waste. It&amp;rsquo;s one of the
simplest and most common molecules on earth. It is subject to many of the most
common chemical transformations possible.&lt;/p&gt;

&lt;p&gt;What if we could design &amp;ldquo;solar panels&amp;rdquo; or filtration units which operated like
synthetic chlorophyll, extracting carbon and producing oxygen? Surely some type
of positive result could be gained through the process in addition to the
environmental benefit?&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m not a biologist or chemist, so this might be a thoroughly impractical for
any number of reasons I haven&amp;rsquo;t thought about. But - what if?&lt;/p&gt;

&lt;h4&gt;Addendum&lt;/h4&gt;

&lt;p&gt;I intentionally wrote this before Googling. As a programmer, it some times feels
like I&amp;rsquo;m just a professional search-engine operator. It&amp;rsquo;s nice to just spend
some time &lt;strong&gt;thinking&lt;/strong&gt; about a problem, rather than immediately jumping to the
solution. That being said, I was quite satisfied with the result once I did
search.&lt;/p&gt;

&lt;p&gt;The &amp;ldquo;answer&amp;rdquo; is that it&amp;rsquo;s a good idea being pioneered by some very smart
people, but not yet ready for widespread use on the &amp;ldquo;Climate Change&amp;rdquo; scale.&lt;/p&gt;

&lt;p&gt;We need people on this.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Carbon_dioxide_removal"&gt;Carbon dioxide removal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Carbon_dioxide_scrubber"&gt;Carbon dioxide scrubber&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Advent of Code</title>
    <link rel="alternate" href="http://andyvanee.com/2015/12/19/advent-of-code.html"/>
    <id>http://andyvanee.com/2015/12/19/advent-of-code.html</id>
    <published>2015-12-18T17:00:00-07:00</published>
    <updated>2017-11-07T21:30:04-07:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;p&gt;I’ve really been enjoying working my way through the code challenges at
&lt;a href="http://adventofcode.com/"&gt;http://adventofcode.com/&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;My solutions are here: &lt;a href="https://github.com/andyvanee/adventofcode"&gt;https://github.com/andyvanee/adventofcode&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I’m now on day 8, and the examples...&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;I&amp;rsquo;ve really been enjoying working my way through the code challenges at
&lt;a href="http://adventofcode.com/"&gt;http://adventofcode.com/&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;My solutions are here: &lt;a href="https://github.com/andyvanee/adventofcode"&gt;https://github.com/andyvanee/adventofcode&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m now on day 8, and the examples have ranged from
&lt;a href="https://github.com/andyvanee/adventofcode/blob/master/bin/day_1"&gt;very easy&lt;/a&gt; to
&lt;a href="https://github.com/andyvanee/adventofcode/blob/master/lib/bt.rb"&gt;pretty involved&lt;/a&gt;,
but none have been devilishly complicated or tricky.&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s my favorite part:&lt;/p&gt;

&lt;p&gt;Each exercise has a second step, which is only visible after solving step 1.
Knowing that you will have to refactor or extend deal the code you wrote in step
one is much more like real-world coding.&lt;/p&gt;

&lt;p&gt;I think this kind of exercise is important at any level of programming
experience. For me, it was some confirmation that I actually have made progress
in my code. I&amp;rsquo;m sure my solutions much more modular and well tested than I would
have produced a few years ago.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/andyvanee/adventofcode/blob/master/spec/fire_hazard_spec.rb"&gt;https://github.com/andyvanee/adventofcode/blob/master/spec/fire_hazard_spec.rb&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 7 was a highlight for me, as I&amp;rsquo;ve never actually written a parser/evaluator
for a custom minilanguage. I&amp;rsquo;ve read the theory a few times, and had some
experience with ad-hoc embedded DSL&amp;rsquo;s, but this was my first end-to-end
implementation of something like this. My solution is in the &lt;code&gt;BT&lt;/code&gt; module here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/andyvanee/adventofcode/tree/master/lib"&gt;https://github.com/andyvanee/adventofcode/tree/master/lib&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Although it could use some cleanup and documentation about what&amp;rsquo;s actually going
on, I was pretty happy with the performance and functionality - especially with
the addition of memoization of partial results here: 
&lt;a href="https://github.com/andyvanee/adventofcode/blob/master/lib/bt/evaluator.rb"&gt;https://github.com/andyvanee/adventofcode/blob/master/lib/bt/evaluator.rb&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A big thumbs up to &lt;a href="http://was.tl/"&gt;http://was.tl/&lt;/a&gt; for this project!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Multiple Foreign Keys</title>
    <link rel="alternate" href="http://andyvanee.com/2014/07/31/multi-comp-foreign-key.html"/>
    <id>http://andyvanee.com/2014/07/31/multi-comp-foreign-key.html</id>
    <published>2014-07-30T18:00:00-06:00</published>
    <updated>2017-11-07T21:30:04-07:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;p&gt;I’d like to document a problem that I’ve never had before, and the solution
I arrived at. It was not a real complicated problem, but I got hung up on an
even simpler problem.&lt;/p&gt;

&lt;p&gt;Say I want to store directories...&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;I&amp;rsquo;d like to document a problem that I&amp;rsquo;ve never had before, and the solution
I arrived at. It was not a real complicated problem, but I got hung up on an
even simpler problem.&lt;/p&gt;

&lt;p&gt;Say I want to store directories in the database, and the files within those
directories in an associated table. The actual problem is much more specific,
but I&amp;rsquo;ve made it generic. Here are some sample entries:&lt;/p&gt;

&lt;p&gt;Directories:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;id: 1, name: home
id: 2, name: example
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Files:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;a_dir_id: 1, filename: 'test', content: 'some content'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Looking at this, it seemed fairly basic. The catch was that the
directory id and filename would have to be a composite primary key, which I
haven&amp;rsquo;t really used all that much. On top of that, the directory id also needs
to be a foreign key. I read a bit and decided that this was probably doable,
so this is where I got to:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'data_mapper'&lt;/span&gt;
&lt;span class="no"&gt;DataMapper&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:default&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'mysql://root@127.0.0.1/sample'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ADir&lt;/span&gt;
  &lt;span class="kp"&gt;include&lt;/span&gt; &lt;span class="no"&gt;DataMapper&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Resource&lt;/span&gt;
  &lt;span class="n"&gt;property&lt;/span&gt; &lt;span class="ss"&gt;:id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;Serial&lt;/span&gt;
  &lt;span class="n"&gt;property&lt;/span&gt; &lt;span class="ss"&gt;:name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:unique&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;
  &lt;span class="n"&gt;has&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:a_files&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;AFile&lt;/span&gt;
  &lt;span class="kp"&gt;include&lt;/span&gt; &lt;span class="no"&gt;DataMapper&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Resource&lt;/span&gt;
  &lt;span class="n"&gt;property&lt;/span&gt; &lt;span class="ss"&gt;:a_dir_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;Integer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:key&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;
  &lt;span class="n"&gt;property&lt;/span&gt; &lt;span class="ss"&gt;:filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:key&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;
  &lt;span class="n"&gt;property&lt;/span&gt; &lt;span class="ss"&gt;:content&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;Text&lt;/span&gt;
  &lt;span class="n"&gt;belongs_to&lt;/span&gt; &lt;span class="ss"&gt;:a_dir&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="no"&gt;DataMapper&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;auto_migrate!&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Running this, I ended up with this cryptic error:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;...Can't create table 'sample.#sql-1ed_113' (errno: 150) (DataObjects::SQLError)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It was not a helpful error message. I assumed that what I was trying was simply
not possible, but I blazed through and started writing the raw SQL to acheive
what I wanted, and it turns out that it certainly is possible in MySQL.&lt;/p&gt;

&lt;p&gt;After many rabbit trails, it dawned on me that &lt;code&gt;Serial&lt;/code&gt; columns are unsigned and
&lt;code&gt;Integer&lt;/code&gt; columns are not. Adding a &lt;code&gt;:min&lt;/code&gt; argument to this one line made it
work like a charm:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;property :a_dir_id, Integer, :min =&amp;gt; 0, :key =&amp;gt; true
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Success!!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>The Case Against Frameworks</title>
    <link rel="alternate" href="http://andyvanee.com/2014/04/20/the-case-against-frameworks.html"/>
    <id>http://andyvanee.com/2014/04/20/the-case-against-frameworks.html</id>
    <published>2014-04-19T18:00:00-06:00</published>
    <updated>2017-11-07T21:30:04-07:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;p&gt;This may come across  as a rant, but I’m hoping I can keep this as objective as possible: I don’t like frameworks.&lt;/p&gt;

&lt;p&gt;I’m going to use a broad definition of frameworks defined like this:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Any 3rd party...&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    <content type="html">&lt;p&gt;This may come across  as a rant, but I&amp;rsquo;m hoping I can keep this as objective as possible: I don&amp;rsquo;t like frameworks.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m going to use a broad definition of frameworks defined like this:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Any 3rd party dependency which broadly influences how you structure
and implement your own application.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I&amp;rsquo;m defining it in this way specifically to break down the divide between libraries and frameworks. You&amp;rsquo;ll find many articles bashing frameworks that go on to sing the praises of their favorite libraries. I don&amp;rsquo;t agree with this distinction.&lt;/p&gt;

&lt;p&gt;The other reason I&amp;rsquo;m defining it this way is that I really have nothing against using 3rd party code. There is a wealth of people that are amassing a collective wisdom far beyond what you can accomplish on your own. By all means - &lt;strong&gt;make use of that&lt;/strong&gt;. I want to highlight the pitfalls of this reliance.&lt;/p&gt;

&lt;h3&gt;Symbiotic Coupling&lt;/h3&gt;

&lt;p&gt;In the best case, a library or framework is perfectly aligned with your own objectives. The authors wrote it to solve your problem exactly. They have thoroughly documented  the use cases, tested all the common and edge cases and they are responsive to community feedback. This is a true symbiotic relationship - and it is the most powerful force multiplier a developer has at their disposal.&lt;/p&gt;

&lt;p&gt;In reality, the relationship is a &lt;em&gt;lot more blurry&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Maintainers can be stubborn and opinionated - ignoring or outright refusing to address legitimate feedback. On the flip-side, they may be constantly swayed by community feedback, leading to a muddled and inconsistent API and a constantly growing scope. They may silently drop support for the version that you depend on in favor of a shiny new implementation, leaving you to pay the cost of either migrating away from, or independently supporting the rotting legacy code.&lt;/p&gt;

&lt;p&gt;This is a social contract. You need to get a sense if the developers and community will be allies or adversaries in the long run. Read the mailing lists. Skim the open and closed issues. Get a feel for the commit history.&lt;/p&gt;

&lt;h3&gt;SLOC&lt;/h3&gt;

&lt;p&gt;Another consideration is how many significant lines of code this library adds to your project. I would argue (somewhat hypocritically) that a responsible developer must read and have a basic understanding of every one of those lines.&lt;/p&gt;

&lt;p&gt;This may sound outrageous. The whole reason for using that code is to hide that complexity and keep your own app tightly focused. But there are significant costs to ignoring what&amp;rsquo;s under the hood.&lt;/p&gt;

&lt;p&gt;The first cost is that of reinventing the wheel. If you have only a surface understanding of the code you&amp;rsquo;re using, there is a much greater chance that you will use it incorrectly or reinvent portions of that code (with your own bugs).&lt;/p&gt;

&lt;p&gt;The second cost lies in the unseen mass of code that you are not actually using. The vast majority of major security vulnerabilities in tools, libraries and frameworks are in features that the average developer isn&amp;rsquo;t even aware of. I&amp;rsquo;m not saying that a responsible developer will identify those bugs at a glance, but it will give you a good feel for the surface area of the code. &lt;strong&gt;Beware large surface areas&lt;/strong&gt;. Even if you&amp;rsquo;re only using a small corner, you may be dragging in a lot more maintenance headaches than you realize.&lt;/p&gt;

&lt;h3&gt;Structure&lt;/h3&gt;

&lt;p&gt;My final point is that 3rd party code will always affect how you structure your application. This can happen in a number of different ways and I&amp;rsquo;ll only skim a few.&lt;/p&gt;

&lt;p&gt;Twitter was famously started as a Rails application. This is a classic case of an application that doesn&amp;rsquo;t suit the framework in really fundamental ways. To framework enthusiasts - it&amp;rsquo;s a clear victory, since it actually worked. They bootstrapped their minimum viable product with a framework and re-architected when they had the cash and developers to do so. To others, it is a joke. A huge waste of time since it could have been done right from day one.&lt;/p&gt;

&lt;p&gt;I think both are missing the core issues. First of all, you&amp;rsquo;ll never get it right the first time. With that in mind, it&amp;rsquo;s best to think hard about how to structure things that are as decoupled as possible. Secondly, a lot has changed since 2006, and there are a lot more options for choosing 3rd party code that may align much better with your own application.&lt;/p&gt;

&lt;p&gt;Another, more subtle, influence on the structure of your application is the community at large. PHP and JavaScript have famously bad sample code and libraries almost universally. I truly believe that good applications can be built in either, if used appropriately and in the right context. Rails tutorials can be equally bad: encouraging fat views, fat controllers or fat models. The truth is that if your app is fat anywhere - that part is unhealthy. There is no silver bullet.&lt;/p&gt;

&lt;p&gt;Good structure is hard - and it&amp;rsquo;s worth considering the merits of all approaches, but at the end of the day you need to learn what&amp;rsquo;s right for your application. The rest is just dogma.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Sandbox your external scripts</title>
    <link rel="alternate" href="http://andyvanee.com/2014/03/29/sandbox-your-external-scripts.html"/>
    <id>http://andyvanee.com/2014/03/29/sandbox-your-external-scripts.html</id>
    <published>2014-03-28T18:00:00-06:00</published>
    <updated>2017-11-07T21:30:04-07:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;p&gt;Fonts and external scripts can be a real performance killer for modern websites. This is the white-screen of death for front-end web development. Anytime a page is blocked for 0.5 or more seconds due...&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;Fonts and external scripts can be a real performance killer for modern websites. This is the white-screen of death for front-end web development. Anytime a page is blocked for 0.5 or more seconds due to scripts and hosts outside of your control is a serious problem in my opinion. The best solution is to completely sandbox your external scripts like social media widgets. Fonts could use similar treatment.&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s two waterfalls to compare:&lt;/p&gt;

&lt;p&gt;&lt;img src="https://dl.dropboxusercontent.com/u/20801198/andyvanee.com/network-fail.png" alt="Network Fail" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="https://dl.dropboxusercontent.com/u/20801198/andyvanee.com/network-nice-fail.png" alt="Network Soft Fail" /&gt;&lt;/p&gt;

&lt;p&gt;Below is the gist of the code.&lt;/p&gt;

&lt;p&gt;What it does is put all the HTML that contains possibly blocking scripts into an unknown script tag type (which the browser just skips) and then injects this after the page is loaded. There&amp;rsquo;s a bit of gymnastics to make it possible to embed script tags within a script tags, but I think the result is worth it.&lt;/p&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"async-scripts"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Social widgets will go here...&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"script-sandbox"&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text/html-template"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="kr"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"my-toolbar"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"https://twitter.com/andyvanee"&lt;/span&gt; &lt;span class="kr"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"twitter-follow-button"&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;show&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"false"&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"60px"&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;align&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"left"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nx"&gt;Follow&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;andyvanee&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/a&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"https://twitter.com/share"&lt;/span&gt; &lt;span class="kr"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"twitter-share-button"&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;via&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"andyvanee"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nx"&gt;Tweet&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/a&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;
        &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;js&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;fjs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementsByTagName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sr"&gt;/^http:/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;)?&lt;/span&gt;&lt;span class="s1"&gt;'http'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s1"&gt;'https'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt;&lt;span class="nx"&gt;js&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="nx"&gt;js&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nx"&gt;js&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s1"&gt;'://platform.twitter.com/widgets.js'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nx"&gt;fjs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parentNode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;insertBefore&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;js&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;fjs&lt;/span&gt;&lt;span class="p"&gt;);}}(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'script'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'twitter-wjs'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;

    &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;rest&lt;/span&gt; &lt;span class="nx"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;your&lt;/span&gt; &lt;span class="nx"&gt;widgets&lt;/span&gt; &lt;span class="nx"&gt;here&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
  &lt;span class="nx"&gt;jQuery&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;sandbox&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"#script-sandbox"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;html&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/--#/g&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/#--/g&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"#async-scripts"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;share_html&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;  
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href="https://gist.github.com/Andyvanee/9849384"&gt;View on gist.github.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve used various methods with similar results before, but what I like about this one is that you can just block off an entire chunk of HTML and defer loading it until a later point.&lt;/p&gt;

&lt;p&gt;One final hint: you can simulate a network timeout really easily by adjusting the external url to specifying a blocked port. Change &lt;a href="https://twitter.com/share"&gt;https://twitter.com/share&lt;/a&gt; to &lt;a rel="nofollow" href="https://twitter.com:81/share"&gt;https://twitter.com:81/share&lt;/a&gt; to see how your page is affected by timeout errors.&lt;/p&gt;

&lt;p&gt;Happy Hacking!&lt;/p&gt;

&lt;style type="text/css"&gt;
    pre {
        white-space: pre;
        word-wrap: normal;
        overflow-y: scroll;        
    }
&lt;/style&gt;
</content>
  </entry>
</feed>
